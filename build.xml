<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 ==========================================================================

 JSAP build file

Author:
 Martin Lamb

Legal:
 Copyright (c) 2002, Martin Lamb All rights reserved.

==============================================================================
 

--> 
<project basedir="." default="help" name="jsap">



	<!-- PROPERTIES ***************************************************************************************** -->

	<!-- Basics -->
   	<property name="name" value="JSAP" />
    <property name="version" value="1.0.3"/>
    <property name="year" value="2002-2003"/>

	<!-- Directories -->
	<property name="buildfile" value="build.xml"/>
    <property name="src" value="src"/>
    <property name="build" value="build"/>
    <property name="doc" value="doc"/>
    <property name="javadoc" value="${doc}/javadoc"/>
	<property name="javadoc.tmp.src" value="${javadoc}/tmpsrc"/>
    <property name="dist" value="dist"/>
    <property name="lib" value="lib"/>
    <property name="devlib" value="devlib"/>

	<!-- Special Files -->
    <property name="testFiles" value="**/Test*" />
    <property name="exampleFiles" value="com/martiansoftware/jsap/examples/" />
    <property name="jarname" value="${name}_${version}.jar" />

	<!-- Administrivia -->
	<property name="url" value="http://www.martiansoftware.com/jsap" />
    <property name="copyrightowners" value="Martian Software, Inc." />
    <property name="copyright.htm" value="Copyright &amp;copy; ${year}, ${copyrightowners}.  All Rights Reserved." />
	<property name="updates.htm" value="For the latest version and documentation, please visit &lt;a href='${url}'&gt;${url}&lt;/a&gt;" />

	<!-- END OF PROPERTIES ********************************************************************************** -->

	<target name="eclipse-setcompiler" if="eclipse.running">
	    <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
	</target>

    <target name="init" depends="eclipse-setcompiler">

		<!-- Create destination directories if needed. -->
        <mkdir dir="${build}"/>
        <mkdir dir="${javadoc}"/>
        <mkdir dir="${dist}"/>
        
        <!-- Who knows... we might need this for something. -->
        <tstamp/>
        
    </target>

	<path id="devlib.class.path">
		<pathelement location="${devlib}/junit.jar"/>
	</path>

	<path id="lib.class.path">
		<pathelement location="${lib}/ant.jar"/>
	</path>

	<target name="help">
		<echo>

----------------------------------------------------------------------

Targets:

  clean         - delete all intermediate &amp; compiled files
  compile-api   - compiles the JSAP API
  compile-tests - compiles the JSAP API and JUnit test cases
  compile-all	- compiles the JSAP API, JUnit test cases, and examples
  test          - compiles the JSAP API and tests it
  build         - compiles the JSAP API and builds JSAP.jar
  javadoc       - compiles the JSAP API and generates javadoc documentation
  dist			- compiles the JSAP API, builds the jar file, runs javadoc, and
  				  creates source and binary distribution files.

----------------------------------------------------------------------
		</echo>
	</target>

    <target name="clean" depends="init">
        <delete dir="${build}" verbose="true"/>
        <delete dir="${javadoc}" verbose="true"/>
        <delete dir="${dist}" verbose="true"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${javadoc}"/>
        <mkdir dir="${dist}"/>
    </target>
    
    <target name="compile-api" depends="init" >
        <javac destdir="${build}" srcdir="${src}">
        	<exclude name="${testFiles}" />
        	<exclude name="${exampleFiles}" />
        	<classpath refid="lib.class.path" />
        </javac>
    </target>

    <target name="compile-tests" depends="init" >
        <javac destdir="${build}" srcdir="${src}">
        	<exclude name="${exampleFiles}" />
        	<classpath>
        		<pathelement location="${devlib}/junit.jar"/>
        	</classpath>
        	<classpath refid="lib.class.path" />
        </javac>
        <copy todir="${build}">
    		<fileset dir="${src}">
    			<include name="${testConfFiles}" />
			</fileset>
  		</copy>
    </target>

    <target name="compile-all" depends="init" >
        <javac destdir="${build}" srcdir="${src}">
        	<classpath refid="devlib.class.path" />
        	<classpath refid="lib.class.path" />
        </javac>
    </target>

	<target name="test" depends="compile-tests" >
        <junit printsummary="on">
            <test name="com.martiansoftware.jsap.TestAll"/>
            <formatter type="plain" usefile="false"/>
            <classpath refid="devlib.class.path" />
            <classpath>
                <pathelement location="${build}"/>
            </classpath>
        </junit>
    </target>

    <target name="build" depends="clean,test">
        <mkdir dir="${dist}"/>
        <jar basedir="${build}" jarfile="${dist}/${jarname}">
        	<exclude name="${testFiles}" />
        	<exclude name="${exampleFiles}" />
        </jar>
    </target> 

    <target name="javadoc" depends="compile-api">
    	<delete dir="${javadoc}"/>
        <mkdir dir="${javadoc}"/>

        <javadoc 
        	public="true" 
        	destdir="${javadoc}" 
        	sourcepath="${src}" 
        	packagenames="com.martiansoftware.*"
        	windowtitle="JSAP: the Java Simple Argument Parser" >
        	
        	<link href="http://java.sun.com/j2se/1.4.2/docs/api/" />
			<bottom>${copyright.html}&lt;br&gt;${updates.html}</bottom>
			
        </javadoc>
    </target>

	<target name="dist" depends="build,javadoc">
		<property name="distimage" value="${dist}/${name}-${version}"/>

		<delete dir="${distimage}" />
		<mkdir dir="${distimage}" />
		<copy todir="${distimage}" file="${buildfile}" />

		<!-- copy source files into temp directory -->
		<mkdir dir="${distimage}/${src}"/>
		<copy todir="${distimage}/${src}">
			<fileset dir="${src}" />
		</copy>

		<!-- copy jar file into temp directory -->
		<mkdir dir="${distimage}/${lib}"/>
		<copy todir="${distimage}/${lib}" file="${dist}/${jarname}" />
		
		<!-- copy any libraries required for development into temp directory -->
		<mkdir dir="${distimage}/${devlib}"/>
		<copy todir="${distimage}/${devlib}">
			<fileset dir="${devlib}" />
		</copy>
		
		<!-- copy documentation into temp directory -->
		<mkdir dir="${distimage}/${doc}"/>
		<copy todir="${distimage}/${doc}">
			<fileset dir="${doc}" />
		</copy>

		<!-- make the source zip file -->
		<zip destfile="${dist}/${name}-${version}-${src}.zip" basedir="${distimage}" update="false" />
		<tar tarfile="${dist}/${name}-${version}-${src}.tar" basedir="${distimage}"/>
		<gzip zipfile="${name}-${version}-${src}.tar.gz" src="${name}-${version}-${src}.tar"/>
		
		<!-- delete the buildfile, source files and development libaries from the temp directory. -->
		<!-- the binary distribution file should just contain the jar and the documentation. -->
		<delete file="${distimage}/${buildfile}" />
		<delete dir="${distimage}/${src}" />
		<delete dir="${distimage}/${devlib}" />

		<!-- make the binary zip file -->
		<zip destfile="${dist}/${name}-${version}.zip" basedir="${distimage}" update="false" />
		<tar tarfile="${dist}/${name}-${version}.tar" basedir="${distimage}"/>
		<gzip zipfile="${name}-${version}.tar.gz" src="${distimage}.tar"/>

<!--		<delete dir="${distimage}"/> -->
	</target>

	<target name="cleandist" depends="clean, dist">
	</target>
	
</project>
